select 
case 
    when c.category is null and brand = 'ZENS' then 'Zens Legacy' 
    when other_amount_spot_only is not null and other_amount_spot_only != 0 then 'SPOT'
    else coalesce({{fuzzy_match_brand('brand')}},{{fuzzy_match_brand('sku')}}) 
end as brand,
account_key as account_key,
amazon_region_id as region,
marketplace_key,
posted_local_date as date_day,
asin,
sku,
{{ fuzzy_match_category('sku','brand','c.category') }} as internal_sku_category,
currency as original_currency,
gross_sales as ledger_gross_sales,
earned_gross_sales as EARNED_GROSS_SALES,
GIFT_WRAP as ledger_gift_wrap,
REIMBURSED_PRODUCT as ledger_reimbursed_product,
refund_comission as ledger_REFUND_COMMISSION,
REFUNDED_REFERRAL_FEES as ledger_REFUNDED_REFERRAL_FEES,
REIMBURSED_SHIPPING as ledger_REIMBURSED_SHIPPING,
REFUND_PROMOTION as ledger_REFUND_PROMOTION,
REFUND_SHIPPING_CHARGEBACK as ledger_REFUND_SHIPPING_CHARGEBACK,
GOODWILL as ledger_GOODWILL,
REVERSAL_REIMBURSED as ledger_REVERSAL_REIMBURSED,
GIFT_WRAP_CHARGEBACK as ledger_GIFT_WRAP_CHARGEBACK,
shipping as ledger_shipping,
SHIPPING_CHARGEBACK as ledger_SHIPPING_CHARGEBACK,
coalesce(FBA_STORAGE_FEE,0)+coalesce(fba_long_storage_fee,0) as ledger_fba_storage_fee,
FBA_INVENTORY_PLACEMENT_SERVICE as ledger_FBA_INVENTORY_PLACEMENT_SERVICE,
WAREHOUSE_DAMAGE as ledger_WAREHOUSE_DAMAGE,
WAREHOUSE_LOST_MANUAL as ledger_WAREHOUSE_LOST_MANUAL,
FBA_PER_UNIT_FULFILMENT_FEE as ledger_FBA_PER_UNIT_FULFILMENT_FEE,
disposal_complete as ledger_disposal_complete,
removal_complete as ledger_removal_complete,
REFERRAL_FEE as ledger_referral_fee,
promotion as ledger_promotion,
tax_principal_collected as ledger_tax_principal,
tax_shipping as ledger_tax_shipping,
TAX_REIMBURSED as ledger_tax_reimbursed,
tax_other as ledger_tax_other,
case when asin is null and (sku is null) then 0 else other_amount end as ledger_other_amount,
other_amount_spot_only,
restocking_fee as ledger_restocking_fee,
{{ canada_tax_adjustment('marketplace_key', 'brand', 'gross_sales') }} as canada_tax_on_gross_sales,
coalesce(gross_sales,0) + coalesce(REIMBURSED_PRODUCT,0) + coalesce(REVERSAL_REIMBURSED,0) as ledger_net_sales,
coalesce(earned_gross_sales,0) + coalesce(REIMBURSED_PRODUCT,0) + coalesce(REVERSAL_REIMBURSED,0) as earned_net_sales,
sum(EARNED_GROSS_SALES) over (partition by date_trunc(month,posted_local_date),brand) as monthly_brand_gs,
orders,
ledger_units_sold,
ledger_units_returned,
ledger_units_sold-ledger_units_returned as net_units_sold,
{{brandhut_commission_logic(
    'sku', 
    'brand',
    'ledger_net_sales',
    'earned_gross_sales',
    'earned_units_sold',
    'monthly_brand_gs')}} AS ledger_brandhut_commission,
{{brandhut_commission_logic(
    'sku', 
    'brand',
    'earned_net_sales',
    'earned_gross_sales',
    'earned_units_sold',
    'monthly_brand_gs')}} as EARNED_BRANDHUT_COMMISSION
from {{ref('stg_finance__ledger_pivoted')}} l
left join {{ref('category')}} c
        on c.channel_product_id = asin
